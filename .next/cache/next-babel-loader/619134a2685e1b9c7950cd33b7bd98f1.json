{"ast":null,"code":"// import { DictionaryService, RestDictionaryService } from '@sitecore-jss/sitecore-jss-Header';\n// import config from 'temp/config';\n//\n// export class DictionaryServiceFactory {\n//   create(): DictionaryService {\n//     return new RestDictionaryService({\n//       apiHost: config.sitecoreApiHost,\n//       apiKey: config.sitecoreApiKey,\n//       siteName: config.jssAppName,\n//     });\n//   }\n// }\n//\n// export const dictionaryServiceFactory = new DictionaryServiceFactory();\n//GRAPH QL\nimport { RestDictionaryService, GraphQLDictionaryService, JSS_MODE_DISCONNECTED } from '@sitecore-jss/sitecore-jss-nextjs';\nimport config from 'temp/config';\nexport class DictionaryServiceFactory {\n  create() {\n    // Switch to REST endpoint if we are in disconnected mode\n    if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\n      return new RestDictionaryService({\n        apiHost: `http://localhost:${process.env.PROXY_PORT || 3042}`,\n        apiKey: config.sitecoreApiKey,\n        siteName: config.jssAppName\n      });\n    }\n\n    return new GraphQLDictionaryService({\n      endpoint: config.graphQLEndpoint,\n      apiKey: config.sitecoreApiKey,\n      siteName: config.jssAppName\n      /*\r\n      The Dictionary Service needs a root item ID in order to fetch dictionary phrases for the current\r\n      app. If your Sitecore instance only has 1 JSS App, you can specify the root item ID here;\r\n      otherwise, the service will attempt to figure out the root item for the current JSS App using GraphQL and app name.\r\n      rootItemId: '{GUID}'\r\n      */\n\n    });\n  }\n\n}\nexport const dictionaryServiceFactory = new DictionaryServiceFactory();","map":null,"metadata":{},"sourceType":"module"}